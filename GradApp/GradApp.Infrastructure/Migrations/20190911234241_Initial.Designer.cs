// <auto-generated />
using System;
using GradApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GradApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190911234241_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("GradApp.Core.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CourseCode");

                    b.Property<string>("CourseName");

                    b.Property<int>("CourseSection");

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseCode = 1301,
                            CourseName = "MATH",
                            CourseSection = 201,
                            Subject = "College Algebra"
                        });
                });

            modelBuilder.Entity("GradApp.Core.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jane",
                            LastName = "Doe",
                            StudentId = 123456789
                        });
                });

            modelBuilder.Entity("GradApp.Core.Models.Timesheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ClockIn");

                    b.Property<DateTime>("ClockOut");

                    b.Property<int?>("CourseId");

                    b.Property<string>("Initials");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Timesheets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClockIn = new DateTime(2019, 9, 4, 13, 32, 2, 0, DateTimeKind.Unspecified),
                            ClockOut = new DateTime(2019, 9, 4, 14, 17, 41, 0, DateTimeKind.Unspecified),
                            Initials = "HK"
                        },
                        new
                        {
                            Id = 2,
                            ClockIn = new DateTime(2019, 9, 6, 12, 17, 37, 0, DateTimeKind.Unspecified),
                            ClockOut = new DateTime(2019, 9, 6, 13, 11, 21, 0, DateTimeKind.Unspecified),
                            Initials = "SW"
                        },
                        new
                        {
                            Id = 3,
                            ClockIn = new DateTime(2019, 9, 9, 14, 3, 56, 0, DateTimeKind.Unspecified),
                            ClockOut = new DateTime(2019, 9, 9, 14, 47, 28, 0, DateTimeKind.Unspecified),
                            Initials = "DA"
                        });
                });

            modelBuilder.Entity("GradApp.Core.Models.Timesheet", b =>
                {
                    b.HasOne("GradApp.Core.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("GradApp.Core.Models.Student")
                        .WithMany("Timesheets")
                        .HasForeignKey("StudentId");
                });
#pragma warning restore 612, 618
        }
    }
}
